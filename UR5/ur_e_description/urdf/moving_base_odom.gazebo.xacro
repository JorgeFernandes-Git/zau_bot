<?xml version="1.0"?>
<robot name="moving_base" xmlns:xacro="http://ros.org/wiki/xacro">

    <xacro:arg name="imu_visual" default="false" />
    <xacro:arg name="laser_visual" default="false" />

    <!--    bumper sensor-->
    <gazebo reference="base_link_mb">
        <sensor name="base_link_mb" type="contact">
            <update_rate>1000.0</update_rate>
            <always_on>true</always_on>
            <contact>
                <collision>base_footprint_fixed_joint_lump__base_link_collision</collision>
            </contact>
            <plugin name="base_link_contact_sensor_plugin" filename="libgazebo_ros_bumper.so">
                <bumperTopicName>contact</bumperTopicName>
                <frameName>world</frameName>
            </plugin>
        </sensor>
    </gazebo>

    <gazebo reference="base_link_mb">
        <material>Gazebo/DarkGrey</material>
    </gazebo>

    <gazebo reference="wheel_left_link">
        <mu1 value="1.0" />
        <mu2 value="1.0" />
        <kp value="10000000.0" />
        <kd value="1.0" />
        <minDepth>0.001</minDepth>
        <maxVel>0.1</maxVel>
        <fdir1>1 0 0</fdir1>
        <material>Gazebo/FlatBlack</material>
    </gazebo>

    <gazebo reference="wheel_right_link">
        <mu1 value="1.0" />
        <mu2 value="1.0" />
        <kp value="10000000.0" />
        <kd value="1.0" />
        <minDepth>0.001</minDepth>
        <maxVel>0.1</maxVel>
        <fdir1>1 0 0</fdir1>
        <material>Gazebo/FlatBlack</material>
    </gazebo>

    <!--  back caster -->
    <gazebo reference="caster_back_right_link">
        <mu1>0.1</mu1>
        <mu2>0.1</mu2>
        <kp>1000000.0</kp>
        <kd>100.0</kd>
        <minDepth>0.001</minDepth>
        <maxVel>1.0</maxVel>
        <material>Gazebo/FlatBlack</material>
    </gazebo>

    <gazebo reference="caster_back_left_link">
        <mu1>0.1</mu1>
        <mu2>0.1</mu2>
        <kp>1000000.0</kp>
        <kd>100.0</kd>
        <minDepth>0.001</minDepth>
        <maxVel>1.0</maxVel>
        <material>Gazebo/FlatBlack</material>
    </gazebo>
    <!--  back caster -->

    <!--  front caster -->
    <gazebo reference="caster_front_right_link">
        <mu1>0.1</mu1>
        <mu2>0.1</mu2>
        <kp>1000000.0</kp>
        <kd>100.0</kd>
        <minDepth>0.001</minDepth>
        <maxVel>1.0</maxVel>
        <material>Gazebo/FlatBlack</material>
    </gazebo>

    <gazebo reference="caster_front_left_link">
        <mu1>0.1</mu1>
        <mu2>0.1</mu2>
        <kp>1000000.0</kp>
        <kd>100.0</kd>
        <minDepth>0.001</minDepth>
        <maxVel>1.0</maxVel>
        <material>Gazebo/FlatBlack</material>
    </gazebo>
    <!--  front caster -->

    <gazebo reference="imu_link">
        <sensor type="imu" name="imu">
            <always_on>true</always_on>
            <visualize>$(arg imu_visual)</visualize>
        </sensor>
        <material>Gazebo/Grey</material>
    </gazebo>

    <!-- <gazebo>
        <plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
            <robotNamespace>moving_base</robotNamespace>
            <legacyModeNS>true</legacyModeNS>
        </plugin>
    </gazebo> -->

    <gazebo>
        <plugin name="moving_base_controller" filename="libgazebo_ros_diff_drive.so">
            <commandTopic>cmd_vel</commandTopic>
            <odometryTopic>zau/odom</odometryTopic>
            <odometryFrame>zau/odom</odometryFrame>
            <odometrySource>world</odometrySource>
            <publishOdomTF>true</publishOdomTF>
            <robotBaseFrame>base_footprint</robotBaseFrame>
            <publishWheelTF>false</publishWheelTF>
            <publishTf>true</publishTf>
            <publishWheelJointState>true</publishWheelJointState>
            <legacyMode>false</legacyMode>
            <updateRate>30</updateRate>
            <leftJoint>wheel_left_joint</leftJoint>
            <rightJoint>wheel_right_joint</rightJoint>
            <wheelSeparation>0.650</wheelSeparation>
            <wheelDiameter>0.168</wheelDiameter>
            <wheelAcceleration>1</wheelAcceleration>
            <wheelTorque>50</wheelTorque>
            <rosDebugLevel>na</rosDebugLevel>
        </plugin>
    </gazebo>

    <!-- <gazebo>
        <plugin name="imu_plugin" filename="libgazebo_ros_imu.so">
            <alwaysOn>true</alwaysOn>
            <bodyName>imu_link</bodyName>
            <frameName>imu_link</frameName>
            <topicName>imu</topicName>
            <serviceName>imu_service</serviceName>
            <gaussianNoise>0.0</gaussianNoise>
            <updateRate>0</updateRate>
            <imu>
                <noise>
                    <type>gaussian</type>
                    <rate>
                        <mean>0.0</mean>
                        <stddev>2e-4</stddev>
                        <bias_mean>0.0000075</bias_mean>
                        <bias_stddev>0.0000008</bias_stddev>
                    </rate>
                    <accel>
                        <mean>0.0</mean>
                        <stddev>1.7e-2</stddev>
                        <bias_mean>0.1</bias_mean>
                        <bias_stddev>0.001</bias_stddev>
                    </accel>
                </noise>
            </imu>
        </plugin>
    </gazebo> -->

    <!-- add sensor camera part -->
    <!-- <xacro:macro name="sim_3dsensor" params="prefix">
        <gazebo reference="${prefix}_depth_frame">
            <sensor type="depth" name="camera">
                <always_on>true</always_on>
                <update_rate>20.0</update_rate>
                <camera>
                    <horizontal_fov>${60.0*pi/180.0}</horizontal_fov>
                    <image>
                        <format>B8G8R8</format>
                        <width>640</width>
                        <height>480</height>
                    </image>
                    <clip>
                        <near>0.10</near>
                        <far>8.0</far>
                    </clip>
                </camera>
                <plugin name="${prefix}_camera_controller" filename="libgazebo_ros_openni_kinect.so">
                    <cameraName>${prefix}</cameraName>
                    <alwaysOn>true</alwaysOn>
                    <updateRate>10</updateRate>
                    <imageTopicName>moving_base/rgb/image_raw</imageTopicName>
                    <depthImageTopicName>moving_base/depth/image_raw</depthImageTopicName>
                    <pointCloudTopicName>moving_base/depth/points</pointCloudTopicName>
                    <cameraInfoTopicName>moving_base/rgb/camera_info</cameraInfoTopicName>
                    <depthImageCameraInfoTopicName>moving_base/depth/camera_info</depthImageCameraInfoTopicName>
                    <frameName>${prefix}_depth_optical_frame</frameName>
                    <baseline>0.1</baseline>
                    <distortion_k1>0.0</distortion_k1>
                    <distortion_k2>0.0</distortion_k2>
                    <distortion_k3>0.0</distortion_k3>
                    <distortion_t1>0.0</distortion_t1>
                    <distortion_t2>0.0</distortion_t2>
                    <pointCloudCutoff>0.4</pointCloudCutoff>
                </plugin>
            </sensor>
        </gazebo>
    </xacro:macro> -->
    <!-- add sensor camera part -->

    <!-- lidar sensor front -->
    <!-- <gazebo reference="base_scan_front">
        <material>Gazebo/DarkGrey</material>
        <sensor type="ray" name="lds_lfcd_sensor_front">
            <pose>0 0 0 0 0 0</pose>
            <visualize>true</visualize>
            <update_rate>5</update_rate>
            <ray>
                <scan>
                    <horizontal>
                        <samples>360</samples>
                        <resolution>1</resolution>
                        <min_angle>0</min_angle>
                        <max_angle>4.71</max_angle>
                    </horizontal>
                </scan>
                <range>
                    <min>0.120</min>
                    <max>3.5</max>
                    <resolution>0.015</resolution>
                </range>
                <noise>
                    <type>gaussian</type>
                    <mean>0.0</mean>
                    <stddev>0.01</stddev>
                </noise>
            </ray>
            <plugin name="gazebo_ros_lds_lfcd_controller" filename="libgazebo_ros_laser.so">
                <topicName>laser/scan_front</topicName>
                <frameName>base_scan_front</frameName>
            </plugin>
        </sensor>
    </gazebo> -->
    <!-- lidar sensor front -->

    <!-- lidar sensor back -->
    <!-- <gazebo reference="base_scan_back">
        <material>Gazebo/DarkGrey</material>
        <sensor type="ray" name="lds_lfcd_sensor_back">
            <pose>0 0 0 0 0 0</pose>
            <visualize>true</visualize>
            <update_rate>5</update_rate>
            <ray>
                <scan>
                    <horizontal>
                        <samples>360</samples>
                        <resolution>1</resolution>
                        <min_angle>0</min_angle>
                        <max_angle>4.71</max_angle>
                    </horizontal>
                </scan>
                <range>
                    <min>0.120</min>
                    <max>3.5</max>
                    <resolution>0.015</resolution>
                </range>
                <noise>
                    <type>gaussian</type>
                    <mean>0.0</mean>
                    <stddev>0.01</stddev>
                </noise>
            </ray>
            <plugin name="gazebo_ros_lds_lfcd_controller" filename="libgazebo_ros_laser.so">
                <topicName>laser/scan_back</topicName>
                <frameName>base_scan_back</frameName>
            </plugin>
        </sensor>
    </gazebo> -->
    <!-- lidar sensor back -->


</robot>